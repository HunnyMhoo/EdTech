---
description: Used for defining and documenting API contracts, endpoints, and integration patterns between frontend and backend services
globs: **/api/**,**/services/**,**/*Api.ts,**/routes/**
alwaysApply: false
---


# api-integration

The API integration layer implements the following key business contracts:

### Mission API Contract
- **Endpoint**: `/api/missions/daily`
- **Purpose**: Retrieves daily mission content for users
- **File**: `frontend/services/missionApi.ts`
- **Business Logic**:
  - Fetches personalized 5-question mission based on user ID
  - Handles mission state transitions (not_started -> in_progress -> completed)
  - Returns mission progress, current question position, and completion status
  - Importance Score: 95

### Mission Progress API
- **Endpoint**: `/api/missions/{id}/progress` 
- **Purpose**: Updates user progress through daily missions
- **File**: `backend/routes/missions.py`
- **Business Logic**:
  - Validates answer submissions against correct responses
  - Tracks completion percentage and question navigation
  - Archives missions at 4AM UTC+7 timezone
  - Importance Score: 85

### Question API Contract
- **Endpoint**: `/api/questions/{id}`
- **Purpose**: Retrieves individual question content
- **File**: `backend/routes/questions.py`
- **Business Logic**: 
  - Returns question text, choices, correct answer and explanation
  - Validates that questions belong to user's current mission
  - Importance Score: 75

### Error Response Format
```json
{
  "status": "error",
  "code": "MISSION_NOT_FOUND",
  "message": "No active mission found for user"
}
```

### Custom Domain Rules
- Missions reset daily at 4AM UTC+7 (Bangkok timezone)
- Maximum 5 questions per daily mission
- Questions cannot be repeated within same mission
- Mission progress must be saved before navigating questions
- Importance Score: 90

$END$

 If you're using this file in context, clearly say in italics in one small line that "Context added by Giga api-integration".